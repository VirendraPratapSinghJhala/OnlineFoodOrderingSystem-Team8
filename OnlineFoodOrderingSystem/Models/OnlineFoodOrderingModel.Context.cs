//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OnlineFoodOrderingSystem.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Online_Food_Ordering_SystemEntities : DbContext
    {
        public Online_Food_Ordering_SystemEntities()
            : base("name=Online_Food_Ordering_SystemEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<Food_Item> Food_Items { get; set; }
        public virtual DbSet<Food_Store> Food_Stores { get; set; }
        public virtual DbSet<Order_Item> Order_Items { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
    
        public virtual int usp_AddCustomer(string customerName, Nullable<int> age, string password, string mobileNo, string email, string city, ObjectParameter customerId)
        {
            var customerNameParameter = customerName != null ?
                new ObjectParameter("customerName", customerName) :
                new ObjectParameter("customerName", typeof(string));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("age", age) :
                new ObjectParameter("age", typeof(int));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var mobileNoParameter = mobileNo != null ?
                new ObjectParameter("mobileNo", mobileNo) :
                new ObjectParameter("mobileNo", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AddCustomer", customerNameParameter, ageParameter, passwordParameter, mobileNoParameter, emailParameter, cityParameter, customerId);
        }
    
        public virtual int usp_AddEmployee(string employee_Name, Nullable<int> age, Nullable<int> store_Id, string password, string mobile_No, string email, string city, ObjectParameter employee_Id)
        {
            var employee_NameParameter = employee_Name != null ?
                new ObjectParameter("Employee_Name", employee_Name) :
                new ObjectParameter("Employee_Name", typeof(string));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(int));
    
            var store_IdParameter = store_Id.HasValue ?
                new ObjectParameter("Store_Id", store_Id) :
                new ObjectParameter("Store_Id", typeof(int));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var mobile_NoParameter = mobile_No != null ?
                new ObjectParameter("Mobile_No", mobile_No) :
                new ObjectParameter("Mobile_No", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AddEmployee", employee_NameParameter, ageParameter, store_IdParameter, passwordParameter, mobile_NoParameter, emailParameter, cityParameter, employee_Id);
        }
    
        public virtual ObjectResult<Nullable<long>> usp_AddFoodItem(string foodName, string foodType, Nullable<decimal> price, ObjectParameter foodId)
        {
            var foodNameParameter = foodName != null ?
                new ObjectParameter("foodName", foodName) :
                new ObjectParameter("foodName", typeof(string));
    
            var foodTypeParameter = foodType != null ?
                new ObjectParameter("foodType", foodType) :
                new ObjectParameter("foodType", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("usp_AddFoodItem", foodNameParameter, foodTypeParameter, priceParameter, foodId);
        }
    
        public virtual int usp_AddFoodStoreDetails(string storeName, string location, string email, string mobileNum, Nullable<int> rating, ObjectParameter storeId)
        {
            var storeNameParameter = storeName != null ?
                new ObjectParameter("storeName", storeName) :
                new ObjectParameter("storeName", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var mobileNumParameter = mobileNum != null ?
                new ObjectParameter("mobileNum", mobileNum) :
                new ObjectParameter("mobileNum", typeof(string));
    
            var ratingParameter = rating.HasValue ?
                new ObjectParameter("rating", rating) :
                new ObjectParameter("rating", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AddFoodStoreDetails", storeNameParameter, locationParameter, emailParameter, mobileNumParameter, ratingParameter, storeId);
        }
    
        public virtual int usp_AddOrder(Nullable<int> customerId, ObjectParameter orderId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("customerId", customerId) :
                new ObjectParameter("customerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AddOrder", customerIdParameter, orderId);
        }
    
        public virtual int usp_AddOrderItem(Nullable<int> orderId, Nullable<int> foodItemId, Nullable<decimal> price, Nullable<int> quantity)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("orderId", orderId) :
                new ObjectParameter("orderId", typeof(int));
    
            var foodItemIdParameter = foodItemId.HasValue ?
                new ObjectParameter("foodItemId", foodItemId) :
                new ObjectParameter("foodItemId", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(decimal));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AddOrderItem", orderIdParameter, foodItemIdParameter, priceParameter, quantityParameter);
        }
    
        public virtual int usp_DeleteCustomerById(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("customerId", customerId) :
                new ObjectParameter("customerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DeleteCustomerById", customerIdParameter);
        }
    
        public virtual int usp_DeleteEmployee(Nullable<int> employee_Id)
        {
            var employee_IdParameter = employee_Id.HasValue ?
                new ObjectParameter("Employee_Id", employee_Id) :
                new ObjectParameter("Employee_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DeleteEmployee", employee_IdParameter);
        }
    
        public virtual int usp_DeleteFoodItemById(Nullable<int> foodId)
        {
            var foodIdParameter = foodId.HasValue ?
                new ObjectParameter("foodId", foodId) :
                new ObjectParameter("foodId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DeleteFoodItemById", foodIdParameter);
        }
    
        public virtual int usp_DeleteFoodStoreById(Nullable<int> storeId)
        {
            var storeIdParameter = storeId.HasValue ?
                new ObjectParameter("storeId", storeId) :
                new ObjectParameter("storeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DeleteFoodStoreById", storeIdParameter);
        }
    
        public virtual int usp_DeleteOrderById(Nullable<int> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("orderId", orderId) :
                new ObjectParameter("orderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DeleteOrderById", orderIdParameter);
        }
    
        public virtual int usp_EditFoodStoreDetails(string storeName, string location, string email, string mobileNum, Nullable<int> rating, ObjectParameter storeId)
        {
            var storeNameParameter = storeName != null ?
                new ObjectParameter("storeName", storeName) :
                new ObjectParameter("storeName", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var mobileNumParameter = mobileNum != null ?
                new ObjectParameter("mobileNum", mobileNum) :
                new ObjectParameter("mobileNum", typeof(string));
    
            var ratingParameter = rating.HasValue ?
                new ObjectParameter("rating", rating) :
                new ObjectParameter("rating", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_EditFoodStoreDetails", storeNameParameter, locationParameter, emailParameter, mobileNumParameter, ratingParameter, storeId);
        }
    
        public virtual ObjectResult<Food_Item> usp_GetFoodItemDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Food_Item>("usp_GetFoodItemDetails");
        }
    
        public virtual ObjectResult<Food_Item> usp_GetFoodItemDetails(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Food_Item>("usp_GetFoodItemDetails", mergeOption);
        }
    
        public virtual ObjectResult<Food_Store> usp_GetFoodStores()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Food_Store>("usp_GetFoodStores");
        }
    
        public virtual ObjectResult<Food_Store> usp_GetFoodStores(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Food_Store>("usp_GetFoodStores", mergeOption);
        }
    
        public virtual int usp_UpdateCustomer(Nullable<int> customerId, string customerName, Nullable<int> age, string password, string mobileNo, string email, string city)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("customerId", customerId) :
                new ObjectParameter("customerId", typeof(int));
    
            var customerNameParameter = customerName != null ?
                new ObjectParameter("customerName", customerName) :
                new ObjectParameter("customerName", typeof(string));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("age", age) :
                new ObjectParameter("age", typeof(int));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var mobileNoParameter = mobileNo != null ?
                new ObjectParameter("mobileNo", mobileNo) :
                new ObjectParameter("mobileNo", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateCustomer", customerIdParameter, customerNameParameter, ageParameter, passwordParameter, mobileNoParameter, emailParameter, cityParameter);
        }
    
        public virtual int usp_UpdateEmployee(Nullable<int> employee_Id, string employee_Name, Nullable<int> age, Nullable<int> store_Id, string password, string mobile_No, string email, string city)
        {
            var employee_IdParameter = employee_Id.HasValue ?
                new ObjectParameter("Employee_Id", employee_Id) :
                new ObjectParameter("Employee_Id", typeof(int));
    
            var employee_NameParameter = employee_Name != null ?
                new ObjectParameter("Employee_Name", employee_Name) :
                new ObjectParameter("Employee_Name", typeof(string));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(int));
    
            var store_IdParameter = store_Id.HasValue ?
                new ObjectParameter("Store_Id", store_Id) :
                new ObjectParameter("Store_Id", typeof(int));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var mobile_NoParameter = mobile_No != null ?
                new ObjectParameter("Mobile_No", mobile_No) :
                new ObjectParameter("Mobile_No", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateEmployee", employee_IdParameter, employee_NameParameter, ageParameter, store_IdParameter, passwordParameter, mobile_NoParameter, emailParameter, cityParameter);
        }
    
        public virtual int usp_UpdateFoodItem(Nullable<int> foodId, string foodName, string foodType, Nullable<decimal> price)
        {
            var foodIdParameter = foodId.HasValue ?
                new ObjectParameter("foodId", foodId) :
                new ObjectParameter("foodId", typeof(int));
    
            var foodNameParameter = foodName != null ?
                new ObjectParameter("foodName", foodName) :
                new ObjectParameter("foodName", typeof(string));
    
            var foodTypeParameter = foodType != null ?
                new ObjectParameter("foodType", foodType) :
                new ObjectParameter("foodType", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateFoodItem", foodIdParameter, foodNameParameter, foodTypeParameter, priceParameter);
        }
    
        public virtual int usp_UpdateOrder(Nullable<int> orderId, Nullable<bool> submitStatus, Nullable<int> foodStoreId, Nullable<int> employeeId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("orderId", orderId) :
                new ObjectParameter("orderId", typeof(int));
    
            var submitStatusParameter = submitStatus.HasValue ?
                new ObjectParameter("submitStatus", submitStatus) :
                new ObjectParameter("submitStatus", typeof(bool));
    
            var foodStoreIdParameter = foodStoreId.HasValue ?
                new ObjectParameter("foodStoreId", foodStoreId) :
                new ObjectParameter("foodStoreId", typeof(int));
    
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("employeeId", employeeId) :
                new ObjectParameter("employeeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateOrder", orderIdParameter, submitStatusParameter, foodStoreIdParameter, employeeIdParameter);
        }
    
        public virtual int usp_UpdateOrderItem(Nullable<int> orderId, Nullable<int> foodItemId, Nullable<int> quantity)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("orderId", orderId) :
                new ObjectParameter("orderId", typeof(int));
    
            var foodItemIdParameter = foodItemId.HasValue ?
                new ObjectParameter("foodItemId", foodItemId) :
                new ObjectParameter("foodItemId", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateOrderItem", orderIdParameter, foodItemIdParameter, quantityParameter);
        }
    }
}
